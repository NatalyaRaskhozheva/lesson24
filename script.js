// let str = '15.02.2023'

// str = str.replace(/(\d{2})\.(\d{2})\.(\d{4})/, '$2/$1/$3')
// console.log(str)


//–ó–∞–¥–∞—á–∞  1. –î–∞–Ω–æ –º–∞—Å–∏–≤ —Ä—è–¥–∫–æ–≤–∏—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—å —á–∏—Å–µ–ª (—Ç–æ–±—Ç–æ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª —É –ª–∞–ø–∫–∞—Ö (string). –ó –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ä–µ–≥—É–ª—è—Ä–Ω–∏—Ö –≤–∏—Ä–∞–∑—ñ–≤ —ñ –≥—Ä—É–ø –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–∏—Ö, —É —è–∫–∏—Ö –ø–µ—Ä—à–∞ —ñ –æ—Å—Ç–∞–Ω–Ω—è –ª—ñ—Ç–µ—Ä–∏ –æ–¥–Ω–∞–∫–æ–≤—ñ.
// let arr = ['99', '78', '34', '7098', '21', '9709', '3563']
// let rusultListNumber = []
// if (/[0-9]/.test(arr)) {
// 	for (const num of arr) {
// 		if (/([0-9])(.*)(\1)/.test(num)) rusultListNumber.push(`${num}/`)
// 	}
// } else alert('not')

// alert(rusultListNumber) 

//–ó–∞–¥–∞—á–∞ 2. –ó–∞–º—ñ–Ω–∏—Ç–∏ –Ω–æ–º–µ—Ä —Ä–æ–∑–¥—ñ–ª—è—é—á–∏ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ —Ü–∏—Ñ—Ä –¥–µ—Ñ—ñ—Å–æ–º –∑–≥—ñ–¥–Ω–æ –∑ —Ñ–æ—Ä–º–∞—Ç–æ–º: 0504546626   ü°™  +380-50-45-466-26
// let number = '+380953768367'
// function replacer(match, p1, p2, p3, p4, p5) {
// 	return [p1, p2, p3, p4, p5].join('-')
// }
// let res = number.replace(/(\d{3})(\d{2})(\d{2})(\d{3})(\d{2})/, replacer)
// alert(res)

//–ó–∞–¥–∞—á–∞ 3. –ü—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–∫—É –ø—ñ—Å–ª—è 2000 —Ä–æ–∫—É –¥–æ–¥–∞—Ç–∏ ¬´—Ä.¬ª
//¬´–Ø –Ω–∞—Ä–æ–¥–∏–≤—Å—è 2001, –∞ –≤ —à–∫–æ–ª—ñ –ø—ñ—à–æ–≤ 2007¬ª ü°™ ¬´–Ø –Ω–∞—Ä–æ–¥–∏–≤—Å—è 2001—Ä., –∞ –≤ —à–∫–æ–ª—ñ –ø—ñ—à–æ–≤ 2007—Ä.¬ª
// let string = '–Ø –Ω–∞—Ä–æ–¥–∏–≤—Å—è 2001, –∞ –≤ —à–∫–æ–ª—ñ –ø—ñ—à–æ–≤ 2007 1989'
// let res = string.replace(/2\d{3}/g, '$&—Ä')
// alert(res)

// –ó–∞–¥–∞—á–∞ 4. –í–≤–æ–¥–∏—Ç—å—Å—è –≤–µ–ª–∏–∫–µ —á–∏—Å–ª–æ. –ö–æ–∂–Ω—ñ 3 —Ä–æ–∑—Ä—è–¥–∏ –≤—ñ–¥–¥—ñ–ª—è—Ç–∏ –ø—Ä–æ–±—ñ–ª–æ–º.
// 7457896524 ü°™ 7 457 896 524

// let number = '7557575457896524'
// let res = number.replace(/\B(?=(\d{3})+(?!\d))/g, ' ')
// alert(res)

//–ó–∞–¥–∞—á–∞ 5. –î–∞–Ω–æ —Å–ø–∏—Å–æ–∫ –∑ –≤—ñ–∫–æ–º —É—á–Ω—ñ–≤. –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–∫—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤ –∫–æ–∂–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è —É —Å–ø–∏—Å–∫—É —ñ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ.
// let ageStudent = [13, 15, 7, 9, 34, 21, 13]
// let map = new Map()

// for (const el of ageStudent) {
// 	let elCount = map.get(el) || 0
// 	map.set(el, elCount + 1)
// }
// console.log(map)

// let maxNum = 0
// let maxkey = 0
// map.forEach((val, key) => {
// 	if (maxNum < key) {
// 		maxNum = key
// 		maxkey = key
// 		}
// 	})
// console.log(maxkey)

// –ó–∞–¥–∞—á–∞ 6.  –î–∞–Ω–æ –º–∞—Å–∏–≤ –∫–Ω–∏–≥ (–Ω–∞–∑–≤–∞, —Ä—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è, –∞–≤—Ç–æ—Ä). –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–∏–≥ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞.
// let arrBooks = [
// 	{
// 		name: 'The Housemaid',
// 		year: 2022,
// 		autor: 'Freida McFadden'
// 	},
// 	{
// 		name: 'The Locked Door',
// 		year: 2022,
// 		autor: 'Freida McFadden'
// 	},
// 	{
// 		name: 'Fourth Wing (The Empyrean, 1)',
// 		year: 2021,
// 		autor: 'Rebecca Yarros'
// 	}
// ]
// let map = new Map()

// arrBooks.forEach(book => {
// 	let autor = book.autor
// 	let countBook = map.get(autor) || 0
// 	map.set(autor, countBook + 1)
// })
// console.log(map)

// –ó–∞–¥–∞—á–∞ 7. –î–∞–Ω–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—ñ–¥–≤—ñ–¥—É–≤–∞—á—ñ–≤ –¥–µ—è–∫–æ–≥–æ —Å–∞–π—Ç—É (–¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –≤—ñ–¥–≤—ñ–¥—É–≤–∞—á–∞ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –ª–æ–≥—ñ–Ω). –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω—å.
// let visitHistory = ['user4', 'user1', 'user8', 'user4', 'user2', 'user4', 'user2', 'user5']
// let map = new Map()

// for (const user of visitHistory) {
// 	let userCount = map.get(user) || 0
// 	map.set(user, userCount + 1)
// }
// console.log(map)

// –ó–∞–¥–∞—á–∞ 8. –î–∞–Ω–æ –º–∞—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ (–ø—ñ–±, –∫—É—Ä—Å, —Ñ–∞–∫—É–ª—å—Ç–µ—Ç). –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—ñ–∑–Ω–∏—Ö —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—ñ–≤, —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –∫–æ–∂–Ω–æ–≥–æ –∑ –∫—É—Ä—Å—ñ–≤. 
// let students = [
// 	{
// 		name: 'Natalya',
// 		course: 4,
// 		faculty: 5
// 	},
// 	{
// 		name: 'Igor',
// 		course: 3,
// 		faculty: 1
// 	},
// 	{
// 		name: 'Irina',
// 		course: 1,
// 		faculty: 2
// 	},
// 	{
// 		name: 'Diana',
// 		course: 4,
// 		faculty: 3
// 	},
// 	{
// 		name: 'Dasha',
// 		course: 5,
// 		faculty: 4
// 	},
// 	{
// 		name: 'Denis',
// 		course: 5,
// 		faculty: 2
// 	}
// ]
// let set = new Set()
// let map = new Map()
// students.forEach(student => {
// 	set.add(student.faculty)
// 	let countCourse = map.get(student.course) || 0
// 	map.set(student.course, countCourse + 1)
// })
// console.log(set.size)
// console.log(map)

//–ó–∞–¥–∞—á–∞ 9. –î–∞–Ω–æ –º–∞—Å–∏–≤ –ø–æ–∫–∞–∑—ñ–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä. –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—Ö–æ–¥–∂–µ–Ω—å –∫–æ–∂–Ω–æ–≥–æ —ñ–∑ –ø–æ–∫–∞–∑—ñ–≤
// let temperatures = [12.4, 24.9, 10.6, 12.4, 24.9, 12.4, 10.6, 11.9]
// let map = new Map()

// for (const temperatur of temperatures) {
// 	let countTemp = map.get(temperatur) || 0
// 	map.set(temperatur, countTemp + 1)
// }
// let roundedTemperatures = temperatures.map(temperatur => Math.ceil(temperatur))
// console.log(map)
// console.log(roundedTemperatures)

// –ó–∞–¥–∞—á–∞ 10 –î–∞–Ω–æ –¥–≤–∞ —Å–ø–∏—Å–∫–∏ –ø—Ä—ñ–∑–≤–∏—â —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤, —â–æ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å –≥—É—Ä—Ç–∫–∏ –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ —ñ —ñ—Å—Ç–æ—Ä—ñ—ó. –ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–∫—ñ–ª—å–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –∑ –≥—É—Ä—Ç–∫–∞ –∑ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç–∞–∫–æ–∂ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å –≥—É—Ä—Ç–æ–∫ –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏. –¢–∞–∫–æ–∂ –ø—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–∫—ñ–ª—å–∫–∏ –≤—Å—å–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å —Ö–æ—á–∞ –± –æ–¥–∏–Ω –≥—É—Ä—Ç–æ–∫.
// let mathList = ['Gigi', 'Zelenskiy', 'Budanov', 'Fomenko', 'Shevchenko', 'Friz', 'Roko']
// let historyList = ['Zelenskiy', 'Hofor', 'Rolan', 'Switolina', 'Shevchenko']

// let mathListSet = new Set(mathList)
// let historyListSet = new Set(historyList)

// let countBothGroups = 0
// for (const user of historyListSet) {
// 	if (mathListSet.has(user)) countBothGroups++
// }
// console.log(countBothGroups)

// let globalSet = new Set([...mathList, ...historyList])
// console.log(globalSet)

// –ó–∞–¥–∞—á–∞ 11. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É, —â–æ –≤–∏–±–∏—Ä–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º
//  <input type="color">. */}
// –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ü–µ–π –∫–æ–ª—ñ—Ä —ñ –≤—ñ–¥–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ. –¢–∞–∫–æ–∂ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —ñ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–º—ñ–Ω –ø—Ä–æ—Ç—è–≥–æ–º –æ–¥–Ω–æ–≥–æ —Å–µ–∞–Ω—Å—É.

// function saveColor() {
// 	let color = inpColor.value
// 	localStorage.setItem("myColor", color)

// 	let counter = parseInt(sessionStorage.getItem("counterColors") || 0)
// 	counter++
// 	sessionStorage.setItem("counterColors", counter)
// 	times.innerText = `–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–º—ñ–Ω - ${sessionStorage.getItem("counterColors")}`


// }
// inpColor.onchange = saveColor

// –ó–∞–¥–∞—á–∞ 12. –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ —É –ø–∞–º‚Äô—è—Ç—ñ —Å–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤, —è–∫—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É —Ç—Ä–µ–±–∞ –≤–∏–∫–æ–Ω–∞—Ç–∏ (–∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —É localStorage). –ü–µ—Ä—ñ–æ–¥–∏—á–Ω–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏–Ω–æ–º –≤–∏–±–∏—Ä–∞—Ç–∏ —è–∫—É—Å—å –∑ —Å–ø—Ä–∞–≤ —ñ –≤–∏–≤–æ–¥–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É (–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º confirm). –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –Ω–∞ ¬´–û–∫¬ª, —Ç–æ –≤–∏–¥–∞–ª—è—Ç–∏ —Ü—é –∑–∞–¥–∞—á—É.

let tasks = ['–í–∏–ø–∏—Ç–∏ —á–∞–π', '–ó—Ä–æ–±–∏—Ç–∏ –î–ó', '–ü–æ–≥—É–ª—è—Ç–∏ –∑ –∫–æ—Ç–æ–º', '–ù–∞–≥–æ–¥—É–≤–∞—Ç–∏ –∫–æ—Ç–∞']



function startGenerateRandomAffairs() {
	
	localStorage.setItem("Affairs", JSON.stringify(tasks))
	let startInterval = setInterval(() => {
		let todoList = JSON.parse(localStorage.getItem("Affairs"))
		console.log(todoList)
		let randomAffair = 0 + Math.floor(Math.random() * todoList.length)
		if (todoList.length) {
			if (confirm(todoList[randomAffair])) {
				todoList.splice(randomAffair, 1)
				localStorage.setItem("Affairs", JSON.stringify(todoList))
			}
		} else {
			localStorage.removeItem("Affairs")
			clearInterval(startInterval)
		}
	}, 2000)
	// setTimeout(() => localStorage.removeItem("Affairs"), 12000)
}
startGenerateRandomAffairs()



